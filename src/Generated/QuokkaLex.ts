// Generated from C:\Users\Ivonin\Code\Quokka\Grammar\Quokka\QuokkaLex.g4 by ANTLR 4.6-SNAPSHOT
/* tslint:disable */
// @ts-ignore

import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class QuokkaLex extends Lexer {
	public static readonly SingleInstructionComment=1;
	public static readonly OutputInstructionStart=2;
	public static readonly ControlInstructionStart=3;
	public static readonly Fluff=4;
	public static readonly InstructionEnd=5;
	public static readonly If=6;
	public static readonly EndIf=7;
	public static readonly End=8;
	public static readonly Else=9;
	public static readonly ElseIf=10;
	public static readonly For=11;
	public static readonly In=12;
	public static readonly EndFor=13;
	public static readonly Null=14;
	public static readonly MemberAccessOperator=15;
	public static readonly Pipe=16;
	public static readonly CommaSeparator=17;
	public static readonly LeftParen=18;
	public static readonly RightParen=19;
	public static readonly And=20;
	public static readonly Or=21;
	public static readonly Not=22;
	public static readonly Set=23;
	public static readonly Equals=24;
	public static readonly NotEquals=25;
	public static readonly GreaterThan=26;
	public static readonly LessThan=27;
	public static readonly GreaterThanOrEquals=28;
	public static readonly LessThanOrEquals=29;
	public static readonly Plus=30;
	public static readonly Minus=31;
	public static readonly Multiply=32;
	public static readonly Divide=33;
	public static readonly Number=34;
	public static readonly Digit=35;
	public static readonly DoubleQuotedString=36;
	public static readonly SingleQuotedString=37;
	public static readonly Ampersand=38;
	public static readonly Identifier=39;
	public static readonly WhiteSpace=40;
	public static readonly Instruction=1;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "Instruction"
	];

	public static readonly ruleNames: string[] = [
		"SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Set", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Ampersand", "Identifier", "WhiteSpace"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, undefined, "'${'", "'@{'", undefined, "'}'", undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"'.'", "'|'", "','", "'('", "')'", undefined, undefined, undefined, undefined, 
		"'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", 
		undefined, undefined, undefined, undefined, "'&'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, "SingleInstructionComment", "OutputInstructionStart", "ControlInstructionStart", 
		"Fluff", "InstructionEnd", "If", "EndIf", "End", "Else", "ElseIf", "For", 
		"In", "EndFor", "Null", "MemberAccessOperator", "Pipe", "CommaSeparator", 
		"LeftParen", "RightParen", "And", "Or", "Not", "Set", "Equals", "NotEquals", 
		"GreaterThan", "LessThan", "GreaterThanOrEquals", "LessThanOrEquals", 
		"Plus", "Minus", "Multiply", "Divide", "Number", "Digit", "DoubleQuotedString", 
		"SingleQuotedString", "Ampersand", "Identifier", "WhiteSpace"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(QuokkaLex._LITERAL_NAMES, QuokkaLex._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return QuokkaLex.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(QuokkaLex._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "QuokkaLex.g4"; }

	@Override
	public get ruleNames(): string[] { return QuokkaLex.ruleNames; }

	@Override
	public get serializedATN(): string { return QuokkaLex._serializedATN; }

	@Override
	public get modeNames(): string[] { return QuokkaLex.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02*\u0105\b\x01"+
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06"+
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f"+
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04"+
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04"+
		"\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04"+
		"\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"+
		"\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x03\x02"+
		"\x03\x02\x03\x02\x03\x02\x03\x02\x07\x02Z\n\x02\f\x02\x0E\x02]\v\x02\x03"+
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03"+
		"\x04\x03\x04\x03\x04\x03\x04\x03\x05\x06\x05m\n\x05\r\x05\x0E\x05n\x03"+
		"\x05\x05\x05r\n\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03"+
		"\x07\x03\b\x03\b\x06\b}\n\b\r\b\x0E\b~\x03\b\x03\b\x03\t\x03\t\x03\t\x03"+
		"\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x06\v\x8E\n\v\r\v\x0E\v\x8F"+
		"\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E"+
		"\x06\x0E\x9D\n\x0E\r\x0E\x0E\x0E\x9E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03"+
		"\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03"+
		"\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03"+
		"\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03"+
		"\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03"+
		" \x03 \x03!\x03!\x03\"\x03\"\x03#\x06#\xD9\n#\r#\x0E#\xDA\x03#\x03#\x06"+
		"#\xDF\n#\r#\x0E#\xE0\x05#\xE3\n#\x03$\x03$\x03%\x03%\x07%\xE9\n%\f%\x0E"+
		"%\xEC\v%\x03%\x03%\x03&\x03&\x07&\xF2\n&\f&\x0E&\xF5\v&\x03&\x03&\x03"+
		"\'\x03\'\x03(\x03(\x07(\xFD\n(\f(\x0E(\u0100\v(\x03)\x03)\x03)\x03)\x02"+
		"\x02\x02*\x04\x02\x03\x06\x02\x04\b\x02\x05\n\x02\x06\f\x02\x07\x0E\x02"+
		"\b\x10\x02\t\x12\x02\n\x14\x02\v\x16\x02\f\x18\x02\r\x1A\x02\x0E\x1C\x02"+
		"\x0F\x1E\x02\x10 \x02\x11\"\x02\x12$\x02\x13&\x02\x14(\x02\x15*\x02\x16"+
		",\x02\x17.\x02\x180\x02\x192\x02\x1A4\x02\x1B6\x02\x1C8\x02\x1D:\x02\x1E"+
		"<\x02\x1F>\x02 @\x02!B\x02\"D\x02#F\x02$H\x02%J\x02&L\x02\'N\x02(P\x02"+
		")R\x02*\x04\x02\x03\x15\x03\x02\x7F\x7F\x04\x02&&BB\x04\x02KKkk\x04\x02"+
		"HHhh\x04\x02GGgg\x04\x02PPpp\x04\x02FFff\x04\x02NNnn\x04\x02UUuu\x04\x02"+
		"QQqq\x04\x02TTtt\x04\x02WWww\x04\x02CCcc\x04\x02VVvv\x03\x02$$\x03\x02"+
		"))\x05\x02C\\aac|\x06\x022;C\\aac|\x05\x02\v\f\x0F\x0F\"\"\u010F\x02\x04"+
		"\x03\x02\x02\x02\x02\x06\x03\x02\x02\x02\x02\b\x03\x02\x02\x02\x02\n\x03"+
		"\x02\x02\x02\x03\f\x03\x02\x02\x02\x03\x0E\x03\x02\x02\x02\x03\x10\x03"+
		"\x02\x02\x02\x03\x12\x03\x02\x02\x02\x03\x14\x03\x02\x02\x02\x03\x16\x03"+
		"\x02\x02\x02\x03\x18\x03\x02\x02\x02\x03\x1A\x03\x02\x02\x02\x03\x1C\x03"+
		"\x02\x02\x02\x03\x1E\x03\x02\x02\x02\x03 \x03\x02\x02\x02\x03\"\x03\x02"+
		"\x02\x02\x03$\x03\x02\x02\x02\x03&\x03\x02\x02\x02\x03(\x03\x02\x02\x02"+
		"\x03*\x03\x02\x02\x02\x03,\x03\x02\x02\x02\x03.\x03\x02\x02\x02\x030\x03"+
		"\x02\x02\x02\x032\x03\x02\x02\x02\x034\x03\x02\x02\x02\x036\x03\x02\x02"+
		"\x02\x038\x03\x02\x02\x02\x03:\x03\x02\x02\x02\x03<\x03\x02\x02\x02\x03"+
		">\x03\x02\x02\x02\x03@\x03\x02\x02\x02\x03B\x03\x02\x02\x02\x03D\x03\x02"+
		"\x02\x02\x03F\x03\x02\x02\x02\x03H\x03\x02\x02\x02\x03J\x03\x02\x02\x02"+
		"\x03L\x03\x02\x02\x02\x03N\x03\x02\x02\x02\x03P\x03\x02\x02\x02\x03R\x03"+
		"\x02\x02\x02\x04T\x03\x02\x02\x02\x06a\x03\x02\x02\x02\bf\x03\x02\x02"+
		"\x02\nq\x03\x02\x02\x02\fs\x03\x02\x02\x02\x0Ew\x03\x02\x02\x02\x10z\x03"+
		"\x02\x02\x02\x12\x82\x03\x02\x02\x02\x14\x86\x03\x02\x02\x02\x16\x8B\x03"+
		"\x02\x02\x02\x18\x93\x03\x02\x02\x02\x1A\x97\x03\x02\x02\x02\x1C\x9A\x03"+
		"\x02\x02\x02\x1E\xA2\x03\x02\x02\x02 \xA7\x03\x02\x02\x02\"\xA9\x03\x02"+
		"\x02\x02$\xAB\x03\x02\x02\x02&\xAD\x03\x02\x02\x02(\xAF\x03\x02\x02\x02"+
		"*\xB1\x03\x02\x02\x02,\xB5\x03\x02\x02\x02.\xB8\x03\x02\x02\x020\xBC\x03"+
		"\x02\x02\x022\xC0\x03\x02\x02\x024\xC2\x03\x02\x02\x026\xC5\x03\x02\x02"+
		"\x028\xC7\x03\x02\x02\x02:\xC9\x03\x02\x02\x02<\xCC\x03\x02\x02\x02>\xCF"+
		"\x03\x02\x02\x02@\xD1\x03\x02\x02\x02B\xD3\x03\x02\x02\x02D\xD5\x03\x02"+
		"\x02\x02F\xD8\x03\x02\x02\x02H\xE4\x03\x02\x02\x02J\xE6\x03\x02\x02\x02"+
		"L\xEF\x03\x02\x02\x02N\xF8\x03\x02\x02\x02P\xFA\x03\x02\x02\x02R\u0101"+
		"\x03\x02\x02\x02TU\x07B\x02\x02UV\x07}\x02\x02VW\x07,\x02\x02W[\x03\x02"+
		"\x02\x02XZ\n\x02\x02\x02YX\x03\x02\x02\x02Z]\x03\x02\x02\x02[Y\x03\x02"+
		"\x02\x02[\\\x03\x02\x02\x02\\^\x03\x02\x02\x02][\x03\x02\x02\x02^_\x07"+
		",\x02\x02_`\x07\x7F\x02\x02`\x05\x03\x02\x02\x02ab\x07&\x02\x02bc\x07"+
		"}\x02\x02cd\x03\x02\x02\x02de\b\x03\x02\x02e\x07\x03\x02\x02\x02fg\x07"+
		"B\x02\x02gh\x07}\x02\x02hi\x03\x02\x02\x02ij\b\x04\x02\x02j\t\x03\x02"+
		"\x02\x02km\n\x03\x02\x02lk\x03\x02\x02\x02mn\x03\x02\x02\x02nl\x03\x02"+
		"\x02\x02no\x03\x02\x02\x02or\x03\x02\x02\x02pr\t\x03\x02\x02ql\x03\x02"+
		"\x02\x02qp\x03\x02\x02\x02r\v\x03\x02\x02\x02st\x07\x7F\x02\x02tu\x03"+
		"\x02\x02\x02uv\b\x06\x03\x02v\r\x03\x02\x02\x02wx\t\x04\x02\x02xy\t\x05"+
		"\x02\x02y\x0F\x03\x02\x02\x02z|\x05\x12\t\x02{}\x05R)\x02|{\x03\x02\x02"+
		"\x02}~\x03\x02\x02\x02~|\x03\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F\x80"+
		"\x03\x02\x02\x02\x80\x81\x05\x0E\x07\x02\x81\x11\x03\x02\x02\x02\x82\x83"+
		"\t\x06\x02\x02\x83\x84\t\x07\x02\x02\x84\x85\t\b\x02\x02\x85\x13\x03\x02"+
		"\x02\x02\x86\x87\t\x06\x02\x02\x87\x88\t\t\x02\x02\x88\x89\t\n\x02\x02"+
		"\x89\x8A\t\x06\x02\x02\x8A\x15\x03\x02\x02\x02\x8B\x8D\x05\x14\n\x02\x8C"+
		"\x8E\x05R)\x02\x8D\x8C\x03\x02\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F\x8D"+
		"\x03\x02\x02\x02\x8F\x90\x03\x02\x02\x02\x90\x91\x03\x02\x02\x02\x91\x92"+
		"\x05\x0E\x07\x02\x92\x17\x03\x02\x02\x02\x93\x94\t\x05\x02\x02\x94\x95"+
		"\t\v\x02\x02\x95\x96\t\f\x02\x02\x96\x19\x03\x02\x02\x02\x97\x98\t\x04"+
		"\x02\x02\x98\x99\t\x07\x02\x02\x99\x1B\x03\x02\x02\x02\x9A\x9C\x05\x12"+
		"\t\x02\x9B\x9D\x05R)\x02\x9C\x9B\x03\x02\x02\x02\x9D\x9E\x03\x02\x02\x02"+
		"\x9E\x9C\x03\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F\xA0\x03\x02\x02\x02"+
		"\xA0\xA1\x05\x18\f\x02\xA1\x1D\x03\x02\x02\x02\xA2\xA3\t\x07\x02\x02\xA3"+
		"\xA4\t\r\x02\x02\xA4\xA5\t\t\x02\x02\xA5\xA6\t\t\x02\x02\xA6\x1F\x03\x02"+
		"\x02\x02\xA7\xA8\x070\x02\x02\xA8!\x03\x02\x02\x02\xA9\xAA\x07~\x02\x02"+
		"\xAA#\x03\x02\x02\x02\xAB\xAC\x07.\x02\x02\xAC%\x03\x02\x02\x02\xAD\xAE"+
		"\x07*\x02\x02\xAE\'\x03\x02\x02\x02\xAF\xB0\x07+\x02\x02\xB0)\x03\x02"+
		"\x02\x02\xB1\xB2\t\x0E\x02\x02\xB2\xB3\t\x07\x02\x02\xB3\xB4\t\b\x02\x02"+
		"\xB4+\x03\x02\x02\x02\xB5\xB6\t\v\x02\x02\xB6\xB7\t\f\x02\x02\xB7-\x03"+
		"\x02\x02\x02\xB8\xB9\t\x07\x02\x02\xB9\xBA\t\v\x02\x02\xBA\xBB\t\x0F\x02"+
		"\x02\xBB/\x03\x02\x02\x02\xBC\xBD\t\n\x02\x02\xBD\xBE\t\x06\x02\x02\xBE"+
		"\xBF\t\x0F\x02\x02\xBF1\x03\x02\x02\x02\xC0\xC1\x07?\x02\x02\xC13\x03"+
		"\x02\x02\x02\xC2\xC3\x07#\x02\x02\xC3\xC4\x07?\x02\x02\xC45\x03\x02\x02"+
		"\x02\xC5\xC6\x07@\x02\x02\xC67\x03\x02\x02\x02\xC7\xC8\x07>\x02\x02\xC8"+
		"9\x03\x02\x02\x02\xC9\xCA\x07@\x02\x02\xCA\xCB\x07?\x02\x02\xCB;\x03\x02"+
		"\x02\x02\xCC\xCD\x07>\x02\x02\xCD\xCE\x07?\x02\x02\xCE=\x03\x02\x02\x02"+
		"\xCF\xD0\x07-\x02\x02\xD0?\x03\x02\x02\x02\xD1\xD2\x07/\x02\x02\xD2A\x03"+
		"\x02\x02\x02\xD3\xD4\x07,\x02\x02\xD4C\x03\x02\x02\x02\xD5\xD6\x071\x02"+
		"\x02\xD6E\x03\x02\x02\x02\xD7\xD9\x05H$\x02\xD8\xD7\x03\x02\x02\x02\xD9"+
		"\xDA\x03\x02\x02\x02\xDA\xD8\x03\x02\x02\x02\xDA\xDB\x03\x02\x02\x02\xDB"+
		"\xE2\x03\x02\x02\x02\xDC\xDE\x070\x02\x02\xDD\xDF\x05H$\x02\xDE\xDD\x03"+
		"\x02\x02\x02\xDF\xE0\x03\x02\x02\x02\xE0\xDE\x03\x02\x02\x02\xE0\xE1\x03"+
		"\x02\x02\x02\xE1\xE3\x03\x02\x02\x02\xE2\xDC\x03\x02\x02\x02\xE2\xE3\x03"+
		"\x02\x02\x02\xE3G\x03\x02\x02\x02\xE4\xE5\x042;\x02\xE5I\x03\x02\x02\x02"+
		"\xE6\xEA\x07$\x02\x02\xE7\xE9\n\x10\x02\x02\xE8\xE7\x03\x02\x02\x02\xE9"+
		"\xEC\x03\x02\x02\x02\xEA\xE8\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB"+
		"\xED\x03\x02\x02\x02\xEC\xEA\x03\x02\x02\x02\xED\xEE\x07$\x02\x02\xEE"+
		"K\x03\x02\x02\x02\xEF\xF3\x07)\x02\x02\xF0\xF2\n\x11\x02\x02\xF1\xF0\x03"+
		"\x02\x02\x02\xF2\xF5\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF3\xF4\x03"+
		"\x02\x02\x02\xF4\xF6\x03\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF6\xF7\x07"+
		")\x02\x02\xF7M\x03\x02\x02\x02\xF8\xF9\x07(\x02\x02\xF9O\x03\x02\x02\x02"+
		"\xFA\xFE\t\x12\x02\x02\xFB\xFD\t\x13\x02\x02\xFC\xFB\x03\x02\x02\x02\xFD"+
		"\u0100\x03\x02\x02\x02\xFE\xFC\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02"+
		"\xFFQ\x03\x02\x02\x02\u0100\xFE\x03\x02\x02\x02\u0101\u0102\t\x14\x02"+
		"\x02\u0102\u0103\x03\x02\x02\x02\u0103\u0104\b)\x04\x02\u0104S\x03\x02"+
		"\x02\x02\x10\x02\x03[nq~\x8F\x9E\xDA\xE0\xE2\xEA\xF3\xFE\x05\x07\x03\x02"+
		"\x06\x02\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!QuokkaLex.__ATN) {
			QuokkaLex.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(QuokkaLex._serializedATN));
		}

		return QuokkaLex.__ATN;
	}

}

